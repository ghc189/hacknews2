<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cskaoyan.hackernews2.dao.NewsMapper">
  <resultMap id="BaseResultMap" type="com.cskaoyan.hackernews2.bean.News">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="link" jdbcType="VARCHAR" property="link" />
    <result column="commentCount" jdbcType="INTEGER" property="commentCount" />
    <result column="likeCount" jdbcType="INTEGER" property="likeCount" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createDate" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, image, title, link, commentCount, likeCount, createDate, uid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `news`
    where id = #{id,jdbcType=INTEGER}
  </select>


  <select id="getLatestNews"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from `news`
    LIMIT #{offset},#{limit}
  </select>

  <select id="selectownerIdByNid" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select uid
    from `news`
    where id = #{newsId}
  </select>

  <update id="likeCountById" >
    update  `news` set likeCount=#{likeCount} where id=#{id}
  </update>


  <update id="updateCommentCountByid" >
    update  `news` set commentCount=#{commentCount} where id=#{id}
  </update>

  <select id="selectNews"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from `news`

  </select>



  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `news`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <!--(id,image, title, link,
  commentCount, likeCount, createDate,
  uid)-->
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.cskaoyan.hackernews2.bean.News" useGeneratedKeys="true">
    insert into `news`
    values (null ,#{image,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{link,jdbcType=VARCHAR},
      0, 0, now(),
      #{uid,jdbcType=INTEGER})
  </insert>


  <update id="updateByPrimaryKey" parameterType="com.cskaoyan.hackernews2.bean.News">
    update `news`
    set image = #{image,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      link = #{link,jdbcType=VARCHAR},
      commentCount = #{commentCount,jdbcType=INTEGER},
      likeCount = #{likeCount,jdbcType=INTEGER},
      createDate = #{createDate,jdbcType=TIMESTAMP},
      uid = #{uid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>





  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.cskaoyan.hackernews2.bean.News" useGeneratedKeys="true">
    insert into `news`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="image != null">
        image,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="link != null">
        link,
      </if>
      <if test="commentCount != null">
        commentCount,
      </if>
      <if test="likeCount != null">
        likeCount,
      </if>
      <if test="uid != null">
        uid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="link != null">
        #{link,jdbcType=VARCHAR},
      </if>
      <if test="commentCount != null">
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>


</mapper>